// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4285.CamoSwerve;

import org.usfirst.frc4285.CamoSwerve.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.buttons.*;

public class OI {
    public Joystick leftJoy;
    public Joystick rightJoy;
    public Joystick controller;
    public Joystick slider;
    public Button button1;
    public Button button2;
    public Button button3;
    public Button button4;
    public Button button5;
    public Button button6;
    public Button button7;

    public  OI(){
        leftJoy = new Joystick(RobotMap.LEFT_JOYSTICK);
        rightJoy = new Joystick(RobotMap.RIGHT_JOYSTICK);
        controller = new Joystick(RobotMap.CONTROLLER);
        

        button1 = new JoystickButton(leftJoy, 3);
        button2 = new JoystickButton(rightJoy, 5);
        button3 = new JoystickButton(rightJoy, 4);
        button4 = new JoystickButton(rightJoy, 3);
        button5 = new JoystickButton(leftJoy, 4);
        button6 = new JoystickButton(leftJoy, 5);
        button7 = new JoystickButton(leftJoy, 2);
        

        button1.whenPressed(new Throwing());
        button2.whenPressed(new Turretright());
        button3.whenPressed(new Turretleft());
        button4.whenPressed(new Follow());
        button5.whenPressed(new Pickupballput());
        button6.whenPressed(new Pickupball());
        button7.whenPressed(new pickupRun());
    }

    public boolean getLeftJoyButton (int buttonNumber){
        return leftJoy.getRawButton(buttonNumber);
    }

    public boolean getbuttond(){
        return leftJoy.getRawButtonReleased(3);
    }

    public boolean getbuttonr(){
        return rightJoy.getRawButtonReleased(5);
    }

    public boolean getbuttonl(){
        return rightJoy.getRawButtonReleased(4);
    }

    public boolean getbuttonreleased6(){
        return leftJoy.getRawButtonReleased(5);
    }

    public boolean getbuttonreleased5(){
        return leftJoy.getRawButtonReleased(4);
    }

    public boolean getbuttonreleased4(){
        return rightJoy.getRawButtonReleased(3);

    }
    public boolean getbuttonreleased7(){
        return leftJoy.getRawButtonReleased(2);
    }



    /*
    public double getRightTrigger (){
        return controller.getRawAxis(3);
    }
    */
    /*
    public boolean getcontrollerAbuttonpress (){
        return controller.getRawButton(1);
    }

    public boolean getcontrollerAbuttonrelease (){
        return controller.getRawButton(2);
    }
    */
}